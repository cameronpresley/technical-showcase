{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AlbumService {\n  constructor(http) {\n    this.http = http;\n    this.something = 'kumquats';\n  }\n  getAllPhotos() {\n    return this.http.get('https://jsonplaceholder.typicode.com/photos');\n  }\n}\nAlbumService.ɵfac = function AlbumService_Factory(t) {\n  return new (t || AlbumService)(i0.ɵɵinject(i1.HttpClient));\n};\nAlbumService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AlbumService,\n  factory: AlbumService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AlbumService","constructor","http","something","getAllPhotos","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/cameron/repos/technical-showcase/src/app/services/album.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlbumService {\n  public something: string;\n  constructor(private http: HttpClient) {\n    this.something = 'kumquats';\n  }\n\n  getAllPhotos(): Observable<Album[]> {\n    return this.http.get<Album[]>(\n      'https://jsonplaceholder.typicode.com/photos'\n    );\n  }\n}\n\nexport type Album = {\n  albumId: number;\n  id: number;\n  title: string;\n  url: string;\n  thumbnailUrl: string;\n};\n"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,SAAS,GAAG,UAAU;EAC7B;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAClB,6CAA6C,CAC9C;EACH;;AAVWL,YAAY,C;mBAAZA,YAAY,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZT,YAAY,C;SAAZA,YAAY;EAAAU,OAAA,EAAZV,YAAY,CAAAW,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}